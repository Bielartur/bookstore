  services:
    web:
      build: .
      command: python manage.py runserver 0.0.0.0:8000
      volumes:
        - .:/usr/src/app
      ports:
        - "8000:8000"
      env_file:
        - ./env.dev
      networks:
        - backend
      depends_on:
        db:
          condition: service_healthy

    db:
      image: postgres:13.0-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: dev
        POSTGRES_DB: bookstore_db
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - backend
  networks:
    backend:
      driver: bridge

  volumes:
    postgres_data:
